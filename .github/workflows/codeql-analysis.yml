name: "CodeQL"

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
  schedule:
    - cron: '15 15 * * 0'

env:
  VERSION: "2.0.0"
  QMAKE_PROJECT: "Serial-Studio.pro"
  QT_VERSION: 6.3.0
  QMAKE: qmake6
  CORES: 16

jobs:
  analyze:
    name: 'üí≠ Analyze (Ubuntu 20.04)'
    runs-on: ubuntu-20.04
    permissions:
      actions: read
      contents: read
      security-events: write

    strategy:
      fail-fast: false
      matrix:
        language: [ 'cpp' ]

    steps:
    - name: 'üß∞ Checkout'
      uses: actions/checkout@v2
      with:
        submodules: recursive

    - name: '‚öôÔ∏è Initialize CodeQL'
      uses: github/codeql-action/init@v1
      with:
        languages: ${{ matrix.language }}

    - name: '‚öôÔ∏è Cache Qt'
      id: cache-qt
      uses: actions/cache@v1
      with:
        path: ../Qt
        key: ${{runner.os}}-qtcachedir-${{env.QT_VERSION}}

    - name: '‚öôÔ∏è Install Qt'
      uses: jurplel/install-qt-action@v2
      with:
        version: ${{env.QT_VERSION}}
        modules: qtserialport qt5compat qtconnectivity
        aqtversion: '==2.0.0'
        cached: ${{steps.cache-qt.outputs.cache-hit}}

    - name: '‚öôÔ∏è Install dependencies'
      run: |
        sudo apt-get update
        sudo apt-get install libgl1-mesa-dev libxkbcommon-x11-0 libxcb-icccm4 libxcb-image0 libxcb-keysyms1 libxcb-render-util0 libxcb-xinerama0 libzstd-dev

    - name: 'üöß Compile application'
      run: |
          ${{env.QMAKE}} ${{env.QMAKE_PROJECT}} CONFIG+=release PREFIX=/usr
          make -j${{env.CORES}}

    - name: 'üí≠ Perform CodeQL Analysis'
      uses: github/codeql-action/analyze@v1
